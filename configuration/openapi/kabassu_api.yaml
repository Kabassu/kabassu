openapi: 3.0.0
servers: 
  - url: https://localhost:8080
info:
  title: Kabassu API
  description: API for Kabassu system
  version: 0.4.0-SNAPSHOT
security: 
  - bearerAuth: []
paths:
  /kabassu/login:
    post:
      operationId: login
      summary: Login operation
      security: []
      requestBody:
        description: Parameters requested to login into Kabassu
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
            example: 
              username: admin
              password_hash: admin  
      responses:
        '200':
          description: Json with authentication token
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/LoginResponse"
              example:
                auth_token: $SFSD@QGFESA
  /kabassu/getrequest/{id}:
    get:
      operationId: getrequest
      summary: Gets data for single test execution by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
           type: string
          description: Test Execution ID
      responses:
        '200':
          description: Execution data
  /kabassu/getview/{id}:
    get:
      operationId: getview
      summary: Gets view information by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
           type: string
          description: View ID
      responses:
        '200':
          description: View data    
  /kabassu/getconfiguration/{id}:
    get:
      operationId: getconfiguration
      summary: Gets configuration by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
           type: string
          description: Configuration ID
      responses:
        '200':
          description: Configuration data
  /kabassu/getdefinition/{id}:
    get:
      operationId: getdefinition
      summary: Gets definition by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
           type: string
          description: Test Definition ID
      responses:
        '200':
          description: Definition data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDefinition'
              examples: 
                Git gradle:
                  value:
                    _id: 345324335564
                    name: test
                    runner: gradle
                    locationType: git
                    additionalParameters: 
                      repository: git@github.com:Kabassu/kabassu-simple-test.git
                      runnerOptions: clean test
                    reports: [allure, allure-trend]
  /kabassu/getall/{collection}/{page}/{pagesize}:
    get:
      operationId: getall
      summary: Gets all data from selected collection
      parameters:
        - in: path
          name: collection
          required: true
          schema:
           type: string
          description: collection name
        - in: path
          name: page
          required: true
          schema:
           type: integer
          description: page
        - in: path
          name: pagesize
          required: true
          schema:
           type: integer
          description: page size
      responses:
        '200':
          description: Requested number of objects from collection
  /kabassu/getbyfilters/:
    post:
      operationId: getbyfilters
      summary: Gets all data from collection by filters
      requestBody:
        description: JSON File containing all filters data and requested collection information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestFilters'
      responses:
        '200':
          description: Filtered data from collection
  /kabassu/addview/:
    post:
      operationId: addview
      summary: Create view with executions
      requestBody:
        description: JSON File containing all requiered data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddView'
      responses:
        '200':
          description: View added
  /kabassu/updateview/:
    post:
      operationId: updateview
      summary: Update view (adds or removes execution)
      requestBody:
        description: JSON File containing all data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditView'
      responses:
        '200':
          description: View updated
  /kabassu/getallbyfield/{collection}/{field}/{value}/{page}/{pagesize}:
    get:
      operationId: getallbyfield
      summary: Get all data from collection by field with pagination
      parameters:
        - in: path
          name: collection
          required: true
          schema:
           type: string
          description: Collection name
        - in: path
          name: field
          required: true
          schema:
           type: string
          description: Field name
        - in: path
          name: value
          required: true
          schema:
           type: string
          description: Field value
        - in: path
          name: page
          required: true
          schema:
           type: integer
          description: Page number
        - in: path
          name: pagesize
          required: true
          schema:
           type: integer
          description: Page size (how many elements on page)
      responses:
        '200':
          description: Json file with data
  /kabassu/adddefinition:
    post:
      operationId: adddefinition
      summary: Adds a new test definition to be run with Kabassu
      requestBody:
        description: JSON File containing test definition data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestDefinition'
            examples:
              Local_gradle:
                value:
                  _id: 55322632534
                  name: test
                  runner: gradle
                  locationType: filesystem
      responses:
        '201':
          description: Added
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Test Definition Id
  /kabassu/addconfiguration:
    post:
      operationId: addconfiguration
      summary: Adds a new set of configuration parameters
      requestBody:
        description: JSON File containing configuration parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '201':
          description: Added
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Configuration Id
  /kabassu/test/run:
    post:
      operationId: testrun
      summary: Run tests 
      requestBody:
        description: JSON File containing test run data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRun'
      responses:
        '200':
          description: Test is running
  /kabassu/test/rerun:
    post:
      operationId: testrerun
      summary: ReRun tests 
      requestBody:
        description: JSON File containing test id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestReRun'
      responses:
        '200':
          description: Test is running
  /kabassu/view/run:
    post:
      operationId: viewrun
      summary: Runs all test in view
      requestBody:
        description: JSON File containing view id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewRun'
      responses:
        '200':
          description: Tests are running
          
components:
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT  
  schemas:
    TestDefinition:
        type: object
        description: All data for creating definition
        properties:
          name:
            type: string
            description: Name of definition
          runner:
            type: string
            description: What runner is used for test in this definition
          configurationId:
            type: string
            description: Configuration Id
          locationType:
            type: string
            description: Where test is kept
          additionalParameters:
            type: object
            description: Additional parameters for different runners, location types etc.
          reports:
            type: array
            description: List of reports that should be used
            items:
                type: string
    RequestFilters:
        type: object
        description: Filter information for getting data from collection
        properties:
          collection:
            type: string
            description: Collection name
          page:
            type: integer
            description: Page number
          pageSize:
            type: integer
            description: Page size
          filters:
            type: array
            description: Filters used for data
            items:
                type: object
                properties:
                  filterName:
                    type: string
                    description: Field Name
                  filterValues:
                    type: array
                    description: Searched values
                    items:
                      type: string
    TestRun:
      type: object
      description: Data required to run test
      properties: 
        definitionId: 
          type: string
          description: Definition Id
        configurationId: 
          type: string
          description: Configuration Id (optional)
        description:
          type: string
          description: Configuration description  
        viewId: 
          type: string
          description: View id if execution should be added to view
        additionalParameters:
          type: object
          description: Additional parameters from execution
    Configuration:
      type: object
      description: Data required to create configuration
      properties: 
        name: 
          type: string
          description: Configuration Name
        description:
          type: string
          description: Configuration description
        suggestedType:
          description: Suggested type (for execution or definition)
          type: string
        parameters:
          type: object 
          description: List of parameters
    TestReRun:
      type: object
      description: Data required to rerun test
      properties: 
        requestId: 
          type: string
          description: Execution id
    ViewRun:
      type: object
      description: Data required to run all tests in view
      properties: 
        viewId: 
          type: string
          description: View id
    Login:
      type: object
      description: Data required for login
      properties: 
        username: 
          type: string
          description: Username
        password_hash:
          type: string
          description: Password
    LoginResponse:
      description: Data returned from login endpoint
      type: object
      properties: 
        auth_token: 
          type: string      
          description: Authorization (JWT) token
    EditView:
      type: object
      description: Data required to edit view
      properties: 
        id: 
          type: string
          description: View id
        field:
          type: string
          description: Name of field we want to edit 
        value:
          type: string  
          description: Value we want to change
        operation: 
          type: string       
          description: Choose if we want to add or remove data
    AddView:
      type: object
      description: Data required to create view
      properties: 
        name: 
          type: string
          description: View name
        description:
          type: string
          description: View description
        executionId:
          type: array
          description: List of execution in view
          items:
            type: string
